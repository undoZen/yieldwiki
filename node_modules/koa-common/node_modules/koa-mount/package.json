{
  "name": "koa-mount",
  "description": "Mounting middleware for koa",
  "repository": {
    "type": "git",
    "url": "git://github.com/koajs/mount"
  },
  "version": "1.2.3",
  "keywords": [
    "koa",
    "middleware",
    "mount",
    "mounting"
  ],
  "files": [
    "index.js"
  ],
  "devDependencies": {
    "koa": "koajs/koa",
    "should": "~1.2.2",
    "mocha": "~1.12.1",
    "supertest": "~0.7.1"
  },
  "license": "MIT",
  "dependencies": {
    "koa-compose": "~2.1.0",
    "debug": "*"
  },
  "readme": "\n# koa-mount\n\n  Mount other Koa applications as middleware. The `path` passed to `mount()` is stripped\n  from the URL temporarily until the stack unwinds. This is useful for creating entire \n  apps or middleware that will function correctly regardless of which path segment(s)\n  they should operate on.\n\n## Installation\n\n```js\n$ npm install koa-mount\n```\n\n## Examples\n\n  View the [./examples](blob/master/examples) directory for working examples.\n\n### Mounting Applications\n\n  Entire applications mounted at specific paths. For example you could mount\n  a blog application at \"/blog\", with a router that matches paths such as\n  \"GET /\", \"GET /posts\", and will behave properly for \"GET /blog/posts\" etc\n  when mounted.\n\n```js\nvar mount = require('koa-mount');\nvar koa = require('koa');\n\n// hello\n\nvar a = koa();\n\na.use(function *(next){\n  yield next;\n  this.body = 'Hello';\n});\n\n// world\n\nvar b = koa();\n\nb.use(function *(next){\n  yield next;\n  this.body = 'World';\n});\n\n// app\n\nvar app = koa();\n\napp.use(mount('/hello', a));\napp.use(mount('/world', b));\n\napp.listen(3000);\nconsole.log('listening on port 3000');\n```\n\n  Try the following requests:\n\n```\n$ GET /\nNot Found\n\n$ GET /hello\nHello\n\n$ GET /world\nWorld\n```\n\n### Mounting Middleware\n\n  Mount middleware at specific paths, allowing them to operate independently\n  of the prefix, as they're not aware of it.\n\n```js\nvar mount = require('koa-mount');\nvar koa = require('koa');\n\nfunction *hello(next){\n  yield next;\n  this.body = 'Hello';\n}\n\nfunction *world(next){\n  yield next;\n  this.body = 'World';\n}\n\nvar app = koa();\n\napp.use(mount('/hello', hello));\napp.use(mount('/world', world));\n\napp.listen(3000);\nconsole.log('listening on port 3000');\n```\n\n### Optional Paths\n\n  The path argument is optional, defaulting to \"/\":\n\n```js\napp.use(mount(a));\napp.use(mount(b));\n```\n\n## Debugging\n\n  Use the __DEBUG__ environement variable to whitelist\n  koa-mount debug output:\n\n```\n$ DEBUG=koa-mount node myapp.js &\n$ GET /foo/bar/baz\n\n  koa-mount enter /foo/bar/baz -> /bar/baz +2s\n  koa-mount enter /bar/baz -> /baz +0ms\n  koa-mount enter /baz -> / +0ms\n  koa-mount leave /baz -> / +1ms\n  koa-mount leave /bar/baz -> /baz +0ms\n  koa-mount leave /foo/bar/baz -> /bar/baz +0ms\n```\n\n## License\n\n  MIT",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/koajs/mount/issues"
  },
  "homepage": "https://github.com/koajs/mount",
  "_id": "koa-mount@1.2.3",
  "dist": {
    "shasum": "66e4cef848163946e7b55a8cd796bb69d08b54a2"
  },
  "_from": "koa-mount@~1.2.2",
  "_resolved": "https://registry.npmjs.org/koa-mount/-/koa-mount-1.2.3.tgz"
}
